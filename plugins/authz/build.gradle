buildscript {
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:5.3.2.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.12' apply false
}

apply plugin: 'maven'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude group: "com.vaadin.external.google", module: "android-json"
}

dependencyManagement {
    imports {
        mavenBom ('org.springframework.boot:spring-boot-dependencies:2.5.12') {
            bomProperties([
                    'json.version': '20180130',
                    'json-path.version': '2.4.0',
                    'jsonassert.version': '1.5.0',
                    'postgresql.version': '42.2.5',
            ])
        }
    }
}

dependencies {

    implementation project(':plugin-api')

    compile ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'logback-classic'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile 'com.google.code.findbugs:jsr305:1.3.9'
    compile 'org.slf4j:slf4j-log4j12'
    compile 'org.apache.httpcomponents:httpclient'
    compile 'org.zalando.stups:tokens:0.11.0'
    compile 'org.zalando:problem:0.22.0'
    compile 'org.zalando:jackson-datatype-problem:0.22.0'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'org.json:json:20180130'
    compile 'org.springframework.security:spring-security-core'
    // oauth
    compile('org.springframework.security.oauth:spring-security-oauth2:2.5.0.RELEASE') {
        exclude module: 'spring-webmvc'
        exclude module: 'spring-security-config'
        exclude module: 'spring-beans'
        exclude module: 'spring-core'
        exclude module: 'spring-context'
    }
    compile 'com.squareup.okhttp3:okhttp:4.4.0'

    // use same version as Nakadi
    compile "org.springframework.boot:spring-boot-starter-json"
    compile 'org.echocat.jomon:runtime:1.6.3'
    compile 'com.googlecode.libphonenumber:libphonenumber:8.12.7'

    // open tracing
    compile 'io.opentracing:opentracing-api:0.33.0'
    compile 'io.opentracing:opentracing-util:0.33.0'

    // tests
    testCompile 'junit:junit'
    testCompile 'org.mockito:mockito-core'
    testCompile "com.github.tomakehurst:wiremock-jre8-standalone:2.26.0"
    compile 'jakarta.servlet:jakarta.servlet-api:4.0.3'
}

task fatJar(type: Jar) {
    baseName = 'nakadi-plugin-authz'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.main.allSource
    with jar
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.exceptionFormat = 'full'
}

artifacts {
    archives jar
}
